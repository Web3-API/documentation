/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package quickstartkt

// $start: quickstart-kt-import-client
import io.polywrap.configBuilder.polywrapClient // Import of the Polywrap Client itself
import io.polywrap.core.resolution.Uri // The Polywrap Client uses the Uri class for invocations

// $end

fun main() {
  // $start: quickstart-kt-init-client
  val client = polywrapClient { addDefaults() }
  // $end

  // $start: quickstart-kt-invoke-client
  val result =
      client.invoke<String>(
          uri = Uri("wrapscan.io/polywrap/sha3@1.0"),
          method = "sha3_256",
          args = mapOf("message" to "Hello Polywrap!")
      )

  if (result.isFailure) {
    throw result.exceptionOrNull()!!
  }

  println(result)
  // $end

  // $start: quickstart-kt-uniswap
  val wethResult =
      client.invoke<Map<String, Any>>(
          uri = Uri("wrapscan.io/polywrap/uniswap-v3@1.0"),
          method = "fetchToken",
          args =
              mapOf(
                  "address" to "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
                  "chainId" to "MAINNET"
              )
      )

  // Log the invocation error and stop execution if the invocation fails
  println(wethResult.getOrThrow())

  val usdcResult =
      client.invoke<Map<String, Any>>(
          uri = Uri("wrapscan.io/polywrap/uniswap-v3@1.0"),
          method = "fetchToken",
          args =
              mapOf(
                  "address" to "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
                  "chainId" to "MAINNET"
              )
      )

  // Log the invocation error and stop execution if the invocation fails
  println(usdcResult.getOrThrow())

  val poolAddressResult =
      client.invoke<String>(
          uri = Uri("wrapscan.io/polywrap/uniswap-v3@1.0"),
          method = "getPoolAddress",
          args =
              mapOf(
                  "tokenA" to wethResult.getOrDefault(null),
                  "tokenB" to usdcResult.getOrDefault(null),
                  "fee" to "MEDIUM"
              )
      )

  // Log the invocation error and stop execution if the invocation fails
  println(poolAddressResult.getOrThrow())
  // $end
}
