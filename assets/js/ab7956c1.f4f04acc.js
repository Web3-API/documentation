"use strict";(self.webpackChunk_polywrap_docs=self.webpackChunk_polywrap_docs||[]).push([[3728],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),i=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},s=function(e){var r=i(e.components);return n.createElement(l.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=i(t),f=a,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||o;return t?n.createElement(d,c(c({ref:r},s),{},{components:t})):n.createElement(d,c({ref:r},s))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=f;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[m]="string"==typeof e?e:a,c[1]=p;for(var i=2;i<o;i++)c[i]=t[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4022:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var n=t(7462),a=(t(7294),t(3905));const o={id:"create",title:"Create"},c=void 0,p={unversionedId:"reference/cli/commands/create",id:"reference/cli/commands/create",title:"Create",description:"",source:"@site/docs/reference/cli/commands/create.md",sourceDirName:"reference/cli/commands",slug:"/reference/cli/commands/create",permalink:"/reference/cli/commands/create",draft:!1,editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/reference/cli/commands/create.md",tags:[],version:"current",frontMatter:{id:"create",title:"Create"},sidebar:"docs",previous:{title:"The Polywrap CLI (polywrap)",permalink:"/reference/cli/polywrap-cli"},next:{title:"Codegen",permalink:"/reference/cli/commands/codegen"}},l={},i=[],s={toc:i},m="wrapper";function u(e){let{components:r,...t}=e;return(0,a.kt)(m,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Usage: polywrap create|c [options] [command]\n\nCreate New Projects\n\nOptions:\n  -h, --help                          display help for command\n\nCommands:\n  wasm [options] <language> <name>    Create a Polywrap wasm wrapper. langs:\n                                      assemblyscript, rust, interface\n  app [options] <language> <name>     Create a Polywrap application. langs:\n                                      typescript\n  plugin [options] <language> <name>  Create a Polywrap plugin. langs:\n                                      typescript\n  template [options] <url> <name>     Download template from a URL. formats:\n                                      .git\n  help [command]                      display help for command\n")))}u.isMDXComponent=!0}}]);