"use strict";(self.webpackChunk_polywrap_docs=self.webpackChunk_polywrap_docs||[]).push([[3245],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,g=u["".concat(c,".").concat(f)]||u[f]||d[f]||l;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=f;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[u]="string"==typeof e?e:o,i[1]=a;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7427:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const l={id:"client-js",hide_title:!0},i="@polywrap/client-js",a={unversionedId:"reference/clients/js/client-js",id:"reference/clients/js/client-js",title:"@polywrap/client-js",description:"The Polywrap client extends the PolywrapCoreClient to provide UX features, such as an additional constructor and additional configuration options.",source:"@site/docs/reference/clients/js/client-js.md",sourceDirName:"reference/clients/js",slug:"/reference/clients/js/client-js",permalink:"/reference/clients/js/client-js",draft:!1,editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/reference/clients/js/client-js.md",tags:[],version:"current",frontMatter:{id:"client-js",hide_title:!0},sidebar:"docs",previous:{title:"Infra",permalink:"/reference/cli/commands/infra"},next:{title:"PolywrapClient Config Builder",permalink:"/reference/clients/js/client-config-builder-js"}},c={},s=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Instantiate",id:"instantiate",level:3},{value:"Configure",id:"configure",level:3},{value:"Invoke",id:"invoke",level:3},{value:"Configuration",id:"configuration",level:2},{value:"PolywrapClient",id:"polywrapclient",level:2},{value:"Constructor",id:"constructor",level:3}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"polywrapclient-js"},"@polywrap/client-js"),(0,o.kt)("a",{href:"https://www.npmjs.com/package/@polywrap/client-js",target:"_blank",rel:"noopener noreferrer"},(0,o.kt)("img",{src:"https://img.shields.io/npm/v/@polywrap/client-js.svg",alt:"npm"})),(0,o.kt)("br",null),(0,o.kt)("br",null),"The Polywrap client extends the PolywrapCoreClient to provide UX features, such as an additional constructor and additional configuration options.",(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @polywrap/client-js\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"instantiate"},"Instantiate"),(0,o.kt)("p",null,"Use the PolywrapClient ",(0,o.kt)("a",{parentName:"p",href:"#constructor"},"constructor")," to instantiate the client with the default configuration bundle."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'  import { PolywrapClient } from "@polywrap/client-js";\n\n  const client = new PolywrapClient();\n')),(0,o.kt)("h3",{id:"configure"},"Configure"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"@polywrap/client-config-builder-js")," package to build a custom configuration for your project."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"  const config = new ClientConfigBuilder().addDefaults().build();\n\n  const client = new PolywrapClient(config);\n")),(0,o.kt)("h3",{id:"invoke"},"Invoke"),(0,o.kt)("p",null,"Invoke a wrapper."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'  const result = await client.invoke({\n    uri: "ens/helloworld.dev.polywrap.eth",\n    method: "logMessage",\n    args: {\n      message: "Hello World!"\n    }\n  });\n\n  if (!result.ok) throw result.error;\n\n  const value = result.value;\n')),(0,o.kt)("h1",{id:"reference"},"Reference"),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Below you will find a reference of object definitions which can be used to configure the Polywrap client. Please note that the intended way of configuring the client is to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"ClientConfigBuilder"),", as explained above."),(0,o.kt)("h2",{id:"polywrapclient"},"PolywrapClient"),(0,o.kt)("h3",{id:"constructor"},"Constructor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"  /**\n   * Instantiate a PolywrapClient\n   *\n   * @param config - a client configuration\n   */\n  constructor(config?: CoreClientConfig) \n")))}d.isMDXComponent=!0}}]);