(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{108:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return u})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(8),i=(n(0),n(175)),p=["components"],o={id:"pair",title:"Pair"},u={unversionedId:"demos/uniswapv2/queries/pair",id:"demos/uniswapv2/queries/pair",isDocsHomePage:!1,title:"Pair",description:"Imported types",source:"@site/docs/demos/uniswapv2/queries/pair.md",slug:"/demos/uniswapv2/queries/pair",permalink:"/demos/uniswapv2/queries/pair",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/demos/uniswapv2/queries/pair.md",version:"current"},c=[{value:"Imported types",id:"imported-types",children:[{value:"Token",id:"token",children:[]},{value:"TokenAmount",id:"tokenamount",children:[]}]},{value:"Query schemas",id:"query-schemas",children:[{value:"pairAddress",id:"pairaddress",children:[]},{value:"pairLiquidityToken",id:"pairliquiditytoken",children:[]},{value:"pairReserves",id:"pairreserves",children:[]},{value:"pairToken0Price",id:"pairtoken0price",children:[]},{value:"pairToken1Price",id:"pairtoken1price",children:[]},{value:"pairOutputAmount",id:"pairoutputamount",children:[]},{value:"pairOutputNextPair",id:"pairoutputnextpair",children:[]},{value:"pairInputNextPair",id:"pairinputnextpair",children:[]},{value:"pairInputAmount",id:"pairinputamount",children:[]},{value:"pairLiquidityMinted",id:"pairliquidityminted",children:[]},{value:"pairLiquidityValue",id:"pairliquidityvalue",children:[]}]}],l={toc:c};function s(e){var t=e.components,n=Object(a.a)(e,p);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"imported-types"},"Imported types"),Object(i.b)("h3",{id:"token"},Object(i.b)("a",{parentName:"h3",href:"../common-types#token"},"Token")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"type Token {\n  chainId: ChainId!\n  address: String!\n  currency: Currency!\n}\n")),Object(i.b)("h3",{id:"tokenamount"},Object(i.b)("a",{parentName:"h3",href:"../common-types#tokenamount"},"TokenAmount")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"type TokenAmount {\n  token: Token!\n  amount: String! # UInt256!\n}\n")),Object(i.b)("h2",{id:"query-schemas"},"Query schemas"),Object(i.b)("h3",{id:"pairaddress"},"pairAddress"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Returns address of pair liquidity token contract.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairAddress(\n    token0: Token!\n    token1: Token!\n  ): String!\n")),Object(i.b)("h3",{id:"pairliquiditytoken"},"pairLiquidityToken"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Returns pair liquidity token.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairLiquidityToken(\n    pair: Pair!\n  ): Token!\n")),Object(i.b)("h3",{id:"pairreserves"},"pairReserves"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Returns reserves for pair tokens in sorted order.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairReserves(\n    pair: Pair!\n  ): [TokenAmount!]!\n")),Object(i.b)("h3",{id:"pairtoken0price"},"pairToken0Price"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairToken0Price(\n    pair: Pair!\n  ): String!\n")),Object(i.b)("h3",{id:"pairtoken1price"},"pairToken1Price"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairToken1Price(\n    pair: Pair!\n  ): String!\n")),Object(i.b)("h3",{id:"pairoutputamount"},"pairOutputAmount"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Pricing function for exact input amounts. Returns maximum output amount, based on current reserves, if the trade were executed.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairOutputAmount(\n    pair: Pair!\n    inputAmount: TokenAmount!\n  ): TokenAmount!\n")),Object(i.b)("h3",{id:"pairoutputnextpair"},"pairOutputNextPair"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Pricing function for exact input amounts. Returns next pair state, based on current reserves, if the trade were executed.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairOutputNextPair(\n    pair: Pair!\n    inputAmount: TokenAmount!\n  ): Pair!\n")),Object(i.b)("h3",{id:"pairinputnextpair"},"pairInputNextPair"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Pricing function for exact output amounts. Returns next pair state, based on current reserves, if the trade were executed.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairInputNextPair(\n    pair: Pair!\n    outputAmount: TokenAmount!\n  ): Pair!\n")),Object(i.b)("h3",{id:"pairinputamount"},"pairInputAmount"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Pricing function for exact output amounts. Returns minimum input amount, based on current reserves, if the trade were executed.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairInputAmount(\n    pair: Pair!\n    outputAmount: TokenAmount!\n  ): TokenAmount!\n")),Object(i.b)("h3",{id:"pairliquidityminted"},"pairLiquidityMinted"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Calculates the exact amount of liquidity tokens minted from a given amount of token0 and token1."),"\n",Object(i.b)("em",{parentName:"p"},"totalSupply is total supply of pair liquidity token."),"\n",Object(i.b)("em",{parentName:"p"},"totalSupply must be looked up on-chain."),"\n",Object(i.b)("em",{parentName:"p"},"The value returned from this function cannot be used as an input to getLiquidityValue.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairLiquidityMinted(\n    pair: Pair!\n    totalSupply: TokenAmount!\n    tokenAmount0: TokenAmount!\n    tokenAmount1: TokenAmount!\n  ): TokenAmount\n")),Object(i.b)("h3",{id:"pairliquidityvalue"},"pairLiquidityValue"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Calculates the exact amount of token0 or token1 that the given amount of liquidity tokens represent."),"\n",Object(i.b)("em",{parentName:"p"},"totalSupply is total supply of pair liquidity token."),"\n",Object(i.b)("em",{parentName:"p"},"totalSupply must be looked up on-chain."),"\n",Object(i.b)("em",{parentName:"p"},"If the protocol charge is on, feeOn must be set to true, and kLast must be provided from an on-chain lookup."),"\n",Object(i.b)("em",{parentName:"p"},"Values returned from this function cannot be used as inputs to getLiquidityMinted.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"  pairLiquidityValue(\n    pair: Pair!\n    totalSupply: TokenAmount!\n    liquidity: TokenAmount!\n    feeOn: Boolean\n    kLast: BigInt\n  ): [TokenAmount!]!\n")))}s.isMDXComponent=!0},175:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),l=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=l(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),s=l(n),b=r,d=s["".concat(p,".").concat(b)]||s[b]||m[b]||i;return n?a.a.createElement(d,o(o({ref:t},c),{},{components:n})):a.a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=b;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var c=2;c<i;c++)p[c]=n[c];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);