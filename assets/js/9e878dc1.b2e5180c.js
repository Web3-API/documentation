"use strict";(self.webpackChunk_polywrap_docs=self.webpackChunk_polywrap_docs||[]).push([[6711],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>u});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=n.createContext({}),c=function(e){var r=n.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(o.Provider,{value:r},e.children)},f="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),f=c(t),m=a,u=f["".concat(o,".").concat(m)]||f[m]||y[m]||s;return t?n.createElement(u,i(i({ref:r},l),{},{components:t})):n.createElement(u,i({ref:r},l))}));function u(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=m;var p={};for(var o in r)hasOwnProperty.call(r,o)&&(p[o]=r[o]);p.originalType=e,p[f]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<s;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6994:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const s={id:"wrap-manifest-types-js",hide_title:!0},i="@polywrap/wrap-manifest-types-js",p={unversionedId:"reference/clients/js/libraries/wrap-manifest-types-js",id:"reference/clients/js/libraries/wrap-manifest-types-js",title:"@polywrap/wrap-manifest-types-js",description:"TypeScript typings for the @polywrap/wrap-manifest-schemas package.",source:"@site/docs/reference/clients/js/libraries/wrap-manifest-types-js.md",sourceDirName:"reference/clients/js/libraries",slug:"/reference/clients/js/libraries/wrap-manifest-types-js",permalink:"/reference/clients/js/libraries/wrap-manifest-types-js",draft:!1,editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/reference/clients/js/libraries/wrap-manifest-types-js.md",tags:[],version:"current",frontMatter:{id:"wrap-manifest-types-js",hide_title:!0},sidebar:"docs",previous:{title:"@polywrap/wasm-js",permalink:"/reference/clients/js/libraries/wasm-js"},next:{title:"@polywrap/schema-parse",permalink:"/reference/schema/schema-parse"}},o={},c=[],l={toc:c},f="wrapper";function y(e){let{components:r,...t}=e;return(0,a.kt)(f,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"polywrapwrap-manifest-types-js"},"@polywrap/wrap-manifest-types-js"),(0,a.kt)("p",null,"TypeScript typings for the ",(0,a.kt)("inlineCode",{parentName:"p"},"@polywrap/wrap-manifest-schemas")," package."))}y.isMDXComponent=!0}}]);