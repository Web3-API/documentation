(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{117:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return o})),i.d(t,"metadata",(function(){return s})),i.d(t,"toc",(function(){return l})),i.d(t,"default",(function(){return u}));var n=i(3),r=i(8),c=(i(0),i(178)),a=["components"],o={id:"tickUtils",title:"Tick Utilities"},s={unversionedId:"demos/uniswapv3/queries/tickUtils",id:"demos/uniswapv3/queries/tickUtils",isDocsHomePage:!1,title:"Tick Utilities",description:"nearestUsableTick",source:"@site/docs/demos/uniswapv3/queries/tickUtils.md",slug:"/demos/uniswapv3/queries/tickUtils",permalink:"/demos/uniswapv3/queries/tickUtils",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/demos/uniswapv3/queries/tickUtils.md",version:"current"},l=[{value:"nearestUsableTick",id:"nearestusabletick",children:[]},{value:"tickToPrice",id:"ticktoprice",children:[]},{value:"priceToClosestTick",id:"pricetoclosesttick",children:[]},{value:"tickIsBelowSmallest",id:"tickisbelowsmallest",children:[]},{value:"tickIsAtOrAboveLargest",id:"tickisatorabovelargest",children:[]},{value:"nextInitializedTick",id:"nextinitializedtick",children:[]},{value:"tickListIsSorted",id:"ticklistissorted",children:[]},{value:"getSqrtRatioAtTick",id:"getsqrtratioattick",children:[]},{value:"getTickAtSqrtRatio",id:"gettickatsqrtratio",children:[]}],p={toc:l};function u(e){var t=e.components,i=Object(r.a)(e,a);return Object(c.b)("wrapper",Object(n.a)({},p,i,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h3",{id:"nearestusabletick"},"nearestUsableTick"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Returns the closest tick that is nearest a given tick and usable for the given tick spacing")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-graphql"},"nearestUsableTick(\n  tick: Int32! # The target tick\n  tickSpacing: Int32! # The spacing of the pool\n): Int32!\n")),Object(c.b)("h3",{id:"ticktoprice"},"tickToPrice"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Returns a price object corresponding to the input tick and the base/quote token. Inputs must be tokens because the address order is used to interpret the price represented by the tick.")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-graphql"},"tickToPrice(\n  baseToken: Token! # The base token of the price\n  quoteToken: Token! # The quote token of the price\n  tick: Int32! # The tick for which to return the price\n): Price!\n")),Object(c.b)("h3",{id:"pricetoclosesttick"},"priceToClosestTick"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Returns the first tick for which the given price is greater than or equal to the tick price.")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-graphql"},"priceToClosestTick(\n  price: Price! # Price for which to return the closest tick that represents a price less than or equal to the input price, i.e. the price of the returned tick is less than or equal to the input price.\nNote that a string price is not used as input here, so the 'price' property of the Price type can have any value without affecting the results.\n): Int32!\n")),Object(c.b)("h3",{id:"tickisbelowsmallest"},"tickIsBelowSmallest"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Returns true if the tick index is smaller than all tick indices in the list")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-graphql"},"tickIsBelowSmallest(\n  ticks: Tick[]! # Tick list to check\n  tick: Int32! # Input tick index\n): Boolean!\n")),Object(c.b)("h3",{id:"tickisatorabovelargest"},"tickIsAtOrAboveLargest"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Returns true if the tick index is greater than or equal to all tick indices in the list")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-graphql"},"tickIsAtOrAboveLargest(\n  ticks: Tick[]! # Tick list to check\n  tick: Int32! # Input tick index\n): Boolean!\n")),Object(c.b)("h3",{id:"nextinitializedtick"},"nextInitializedTick"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Returns next initialized tick following the input tick")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-graphql"},"nextInitializedTick(\n  ticks: Tick[]! # Tick list to check\n  tick: Int32! # Input tick index\n  lte: Boolean! # If true, searches list for next initialized tick that has index less than or equal to the input tick index\n): Tick!\n")),Object(c.b)("h3",{id:"ticklistissorted"},"tickListIsSorted"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Returns true if a tick list is sorted by tick index")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-graphql"},"tickListIsSorted(\n  ticks: Tick[]! # The tick list\n): Boolean!\n")),Object(c.b)("h3",{id:"getsqrtratioattick"},"getSqrtRatioAtTick"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Returns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tick")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-graphql"},"getSqrtRatioAtTick(\n  tick: Int32! # The tick for which to compute the sqrt ratio\n): BigInt!\n")),Object(c.b)("h3",{id:"gettickatsqrtratio"},"getTickAtSqrtRatio"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Returns the tick corresponding to a given sqrt ratio, such that getSqrtRatioAtTick(tick) <= sqrtRatioX96 and getSqrtRatioAtTick(tick + 1) > sqrtRatioX96")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-graphql"},"getTickAtSqrtRatio(\n  sqrtRatioX96: BigInt! # The sqrt ratio as a Q64.96 for which to compute the tick\n): Int32!\n")))}u.isMDXComponent=!0},178:function(e,t,i){"use strict";i.d(t,"a",(function(){return u})),i.d(t,"b",(function(){return d}));var n=i(0),r=i.n(n);function c(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){c(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)i=c[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)i=c[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},k=r.a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,c=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(i),k=n,d=u["".concat(a,".").concat(k)]||u[k]||b[k]||c;return i?r.a.createElement(d,o(o({ref:t},l),{},{components:i})):r.a.createElement(d,o({ref:t},l))}));function d(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=i.length,a=new Array(c);a[0]=k;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,a[1]=o;for(var l=2;l<c;l++)a[l]=i[l];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,i)}k.displayName="MDXCreateElement"}}]);