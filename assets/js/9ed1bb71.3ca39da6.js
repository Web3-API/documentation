(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{127:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return d}));var n=r(3),o=r(8),a=(r(0),r(164)),c=["components"],s={id:"project-folder",title:"The Polywrap project folder"},i={unversionedId:"quick-start/create-wasm-wrappers/project-folder",id:"quick-start/create-wasm-wrappers/project-folder",isDocsHomePage:!1,title:"The Polywrap project folder",description:"Once you have your project set up, the folder tree should look something like this:",source:"@site/docs/quick-start/create-wasm-wrappers/project-folder.md",slug:"/quick-start/create-wasm-wrappers/project-folder",permalink:"/quick-start/create-wasm-wrappers/project-folder",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/quick-start/create-wasm-wrappers/project-folder.md",version:"current",sidebar:"docs",previous:{title:"Project setup",permalink:"/quick-start/create-wasm-wrappers/project-setup"},next:{title:"Build, deploy and test",permalink:"/quick-start/create-wasm-wrappers/build-deploy-test"}},p=[{value:"<strong><code>polywrap.yaml</code></strong>",id:"polywrapyaml",children:[]},{value:"<strong><code>schema.graphql</code></strong>",id:"schemagraphql",children:[]},{value:"<strong><code>src/index.ts</code></strong>",id:"srcindexts",children:[]},{value:"<strong><code>src/contracts/*</code></strong>",id:"srccontracts",children:[]},{value:"<strong><code>workflows/*</code></strong>",id:"workflows",children:[]},{value:"<strong><code>scripts/*</code></strong>",id:"scripts",children:[]}],l={toc:p};function d(e){var t=e.components,r=Object(o.a)(e,c);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Once you have your project set up, the folder tree should look something like this:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"polywrap.yaml                  # Manifest File\nsrc/\n\u2502   \u251c\u2500\u2500 index.ts              # Entry point, exports methods defined in schema\n\u2502   |\u2500\u2500 schema.graphql/       # GraphQL Schema\n|   \u2514\u2500\u2500 contracts/            # Smart Contracts\n|\nworkflows/                    # Job definitions (described below)\n|\nscripts/                      # Smart Contract Build/Deploy\n")),Object(a.b)("h3",{id:"polywrapyaml"},Object(a.b)("strong",{parentName:"h3"},Object(a.b)("inlineCode",{parentName:"strong"},"polywrap.yaml"))),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"polywrap.yaml")," is a manifest file describing the layout of a Polywrap Wasm wrapper."),Object(a.b)("h3",{id:"schemagraphql"},Object(a.b)("strong",{parentName:"h3"},Object(a.b)("inlineCode",{parentName:"strong"},"schema.graphql"))),Object(a.b)("p",null,"Each wrapper has a schema. This schema defines the wrapper's: dependencies, methods, and custom types. In short, it's an interface describing how to use the wrapper."),Object(a.b)("h3",{id:"srcindexts"},Object(a.b)("strong",{parentName:"h3"},Object(a.b)("inlineCode",{parentName:"strong"},"src/index.ts"))),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"index.ts")," file exports the wrapper's method's implementations, which contain the wrapper's logic."),Object(a.b)("h3",{id:"srccontracts"},Object(a.b)("strong",{parentName:"h3"},Object(a.b)("inlineCode",{parentName:"strong"},"src/contracts/*"))),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"src/contracts")," directory contains our protocol's Ethereum-based smart contracts."),Object(a.b)("h3",{id:"workflows"},Object(a.b)("strong",{parentName:"h3"},Object(a.b)("inlineCode",{parentName:"strong"},"workflows/*"))),Object(a.b)("p",null,"Workflows provide a simple way to test your Polywrap without having to write custom testing logic (with JavaScript and Jest, for example)."),Object(a.b)("p",null,"We'll be using this functionality further down in this guide with the ",Object(a.b)("inlineCode",{parentName:"p"},"polywrap run")," command, allowing us to easily send test queries against our API."),Object(a.b)("h3",{id:"scripts"},Object(a.b)("strong",{parentName:"h3"},Object(a.b)("inlineCode",{parentName:"strong"},"scripts/*"))),Object(a.b)("p",null,"We've defined some simple build & deployment scripts for our Solidity smart contracts. These are basic utilities, and can be replaced entirely by a ",Object(a.b)("a",{parentName:"p",href:"https://www.trufflesuite.com/"},"Truffle")," or ",Object(a.b)("a",{parentName:"p",href:"https://hardhat.org/"},"Hardhat")," project."),Object(a.b)("p",null,"In the next section, we'll build this example Wasm wrapper and see what gets outputted in the build folder!"))}d.isMDXComponent=!0},164:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=o.a.createContext({}),l=function(e){var t=o.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=l(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),b=n,m=d["".concat(c,".").concat(b)]||d[b]||u[b]||a;return r?o.a.createElement(m,s(s({ref:t},p),{},{components:r})):o.a.createElement(m,s({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=b;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,c[1]=s;for(var p=2;p<a;p++)c[p]=r[p];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);