(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{195:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),o=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=o(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,b=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=o(n),u=a,m=d["".concat(b,".").concat(u)]||d[u]||s[u]||l;return n?r.a.createElement(m,i(i({ref:t},p),{},{components:n})):r.a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,b=new Array(l);b[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,b[1]=i;for(var p=2;p<l;p++)b[p]=n[p];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return b})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n(3),r=(n(0),n(195));const l={id:"schema-bind",hide_title:!0},b={unversionedId:"reference/schema/schema-bind",id:"reference/schema/schema-bind",isDocsHomePage:!1,title:"schema-bind",description:"@polywrap/schema-bind",source:"@site/docs/reference/schema/schema-bind.md",slug:"/reference/schema/schema-bind",permalink:"/reference/schema/schema-bind",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/reference/schema/schema-bind.md",version:"current",sidebar:"docs",previous:{title:"schema-compose",permalink:"/reference/schema/schema-compose"},next:{title:"Talks, Podcasts, and Videos",permalink:"/resources/talks-podcasts-and-videos"}},i=[{value:"Usage",id:"usage",children:[]},{value:"Details",id:"details",children:[]},{value:"Supported Schema Types",id:"supported-schema-types",children:[]}],c={toc:i};function p(e){let{components:t,...n}=e;return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"polywrapschema-bind"},"@polywrap/schema-bind"),Object(r.b)("p",null,"Bind WRAP ABIs to a variety of supported languages through codegen."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript"},'import { BindOptions, BindOutput, bindSchema } from "@polywrap/schema-bind";\nimport { parseSchema } from "@polywrap/schema-parse";\n\nconst schema = fetch("schema.graphql");\nconst abi = parseSchema(schema);\n\nconst input: BindOptions = {\n  projectName: "Test",\n  bindLanguage: "wasm-as",\n  abi,\n  schema,\n  outputDirAbs: "/path/to/output/dir"\n};\n\nconst output: BindOutput = bindSchema(input);\n')),Object(r.b)("h2",{id:"details"},"Details"),Object(r.b)("p",null,"Polywrap uses MessagePack as a common data interchange format between languages. This allows Polywrap WASM modules, authored in different languages, to be run within a single host language (JS, Rust, Python, Go, C#, C++)."),Object(r.b)("p",null,"MessagePack encoded data is sent between module boundaries. Decoding of the message will happen in the destination environment, using generated binding code, created by this package."),Object(r.b)("h2",{id:"supported-schema-types"},"Supported Schema Types"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"GraphQL Schema Type"),Object(r.b)("th",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"th",href:"https://github.com/msgpack/msgpack/blob/master/spec.md#formats"},"MessagePack Type")),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"UInt"),Object(r.b)("td",{parentName:"tr",align:null},"uint 32"),Object(r.b)("td",{parentName:"tr",align:null},"32-bit unsigned integer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"UInt8"),Object(r.b)("td",{parentName:"tr",align:null},"uint 8"),Object(r.b)("td",{parentName:"tr",align:null},"8-bit unsigned integer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"UInt16"),Object(r.b)("td",{parentName:"tr",align:null},"uint 16"),Object(r.b)("td",{parentName:"tr",align:null},"16-bit unsigned integer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"UInt32"),Object(r.b)("td",{parentName:"tr",align:null},"uint 32"),Object(r.b)("td",{parentName:"tr",align:null},"32-bit unsigned integer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Int"),Object(r.b)("td",{parentName:"tr",align:null},"int 32"),Object(r.b)("td",{parentName:"tr",align:null},"32-bit signed integer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Int8"),Object(r.b)("td",{parentName:"tr",align:null},"int 8"),Object(r.b)("td",{parentName:"tr",align:null},"8-bit signed integer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Int16"),Object(r.b)("td",{parentName:"tr",align:null},"int 16"),Object(r.b)("td",{parentName:"tr",align:null},"16-bit signed integer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Int32"),Object(r.b)("td",{parentName:"tr",align:null},"int 32"),Object(r.b)("td",{parentName:"tr",align:null},"32-bit signed integer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"String"),Object(r.b)("td",{parentName:"tr",align:null},"fixstr or str 8/16/32"),Object(r.b)("td",{parentName:"tr",align:null},"UTF-8 string.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Boolean"),Object(r.b)("td",{parentName:"tr",align:null},"bool"),Object(r.b)("td",{parentName:"tr",align:null},"true or false stored as 1 byte.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Bytes"),Object(r.b)("td",{parentName:"tr",align:null},"bin 8/16/32"),Object(r.b)("td",{parentName:"tr",align:null},"array of 8-bit unsigned integer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"BigInt"),Object(r.b)("td",{parentName:"tr",align:null},"fixstr or str 8/16/32"),Object(r.b)("td",{parentName:"tr",align:null},"UTF-8 string.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"BigNumber"),Object(r.b)("td",{parentName:"tr",align:null},"fixstr or str 8/16/32"),Object(r.b)("td",{parentName:"tr",align:null},"UTF-8 string.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"JSON"),Object(r.b)("td",{parentName:"tr",align:null},"fixstr or str 8/16/32"),Object(r.b)("td",{parentName:"tr",align:null},"UTF-8 string.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"[Type]"),Object(r.b)("td",{parentName:"tr",align:null},"fixarray or array 16/32"),Object(r.b)("td",{parentName:"tr",align:null},"Array of elements.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Map"),Object(r.b)("td",{parentName:"tr",align:null},"Msgpack extention type"),Object(r.b)("td",{parentName:"tr",align:null},"Map of key-value pairs.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"type CustomObject {",Object(r.b)("br",null),"\xa0","\xa0","prop: Type",Object(r.b)("br",null),"}"),Object(r.b)("td",{parentName:"tr",align:null},"fixmap or map 16/32"),Object(r.b)("td",{parentName:"tr",align:null},"Structured object.")))))}p.isMDXComponent=!0}}]);