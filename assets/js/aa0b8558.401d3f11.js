(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{129:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return u}));var n=r(3),a=r(8),p=(r(0),r(163)),i=["components"],o={id:"publish-to-ens",title:"Publish to ENS"},s={unversionedId:"quick-start/create-wasm-wrappers/publish-to-ens",id:"quick-start/create-wasm-wrappers/publish-to-ens",isDocsHomePage:!1,title:"Publish to ENS",description:"Once a wrapper is published to IPFS, it can optionally be given a domain via ENS. This allows developers integrating your wrapper to rely upon a human-readable & upgradeable URI. For example ens/v3.uniswap.polywrap.eth.",source:"@site/docs/quick-start/create-wasm-wrappers/publish-to-ens.md",slug:"/quick-start/create-wasm-wrappers/publish-to-ens",permalink:"/quick-start/create-wasm-wrappers/publish-to-ens",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/quick-start/create-wasm-wrappers/publish-to-ens.md",version:"current",sidebar:"docs",previous:{title:"Deploy to IPFS",permalink:"/quick-start/create-wasm-wrappers/deploy-to-ipfs"},next:{title:"Configure Polywrap build pipeline",permalink:"/quick-start/create-wasm-wrappers/build-pipeline"}},c=[{value:"The ENS App",id:"the-ens-app",children:[]},{value:"<code>wrappers</code> CLI",id:"wrappers-cli",children:[]}],l={toc:c};function u(e){var t=e.components,r=Object(a.a)(e,i);return Object(p.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(p.b)("p",null,"Once a wrapper is published to IPFS, it can optionally be given a domain via ENS. This allows developers integrating your wrapper to rely upon a human-readable & upgradeable URI. For example ",Object(p.b)("inlineCode",{parentName:"p"},"ens/v3.uniswap.polywrap.eth"),"."),Object(p.b)("p",null,"There are multiple ways to publish your wrapper's IPFS hash to ENS:"),Object(p.b)("h2",{id:"the-ens-app"},"The ENS App"),Object(p.b)("p",null,Object(p.b)("a",{parentName:"p",href:"https://docs.ens.domains/"},"ENS App")," is a distributed, open, and extensible naming system based on the Ethereum blockchain."),Object(p.b)("h2",{id:"wrappers-cli"},Object(p.b)("inlineCode",{parentName:"h2"},"wrappers")," CLI"),Object(p.b)("p",null,Object(p.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@nerfzael/wrappers"},Object(p.b)("inlineCode",{parentName:"a"},"wrappers"))," is a command-line tool for publishing Wasm wrappers to IPFS and ENS. IPFS publishing is done via a ",Object(p.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@nerfzael/wrap-persistence-node"},"wrap-persistence-node endpoint"),". By default it publishes to the public ",Object(p.b)("a",{parentName:"p",href:"https://ipfs.wrappers.io"},"https://ipfs.wrappers.io")," endpoint.  "))}u.isMDXComponent=!0},163:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),l=function(e){var t=a.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,p=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=n,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||p;return r?a.a.createElement(m,o(o({ref:t},c),{},{components:r})):a.a.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=r.length,i=new Array(p);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<p;c++)i[c]=r[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);