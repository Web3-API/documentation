"use strict";(self.webpackChunk_polywrap_docs=self.webpackChunk_polywrap_docs||[]).push([[2702],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=n,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return r?a.createElement(m,o(o({ref:t},p),{},{components:r})):a.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7552:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const i={id:"package-validation",hide_title:!0},o="@polywrap/package-validation",l={unversionedId:"reference/clients/js/libraries/package-validation",id:"reference/clients/js/libraries/package-validation",title:"@polywrap/package-validation",description:"Description",source:"@site/docs/reference/clients/js/libraries/package-validation.md",sourceDirName:"reference/clients/js/libraries",slug:"/reference/clients/js/libraries/package-validation",permalink:"/reference/clients/js/libraries/package-validation",draft:!1,editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/reference/clients/js/libraries/package-validation.md",tags:[],version:"current",frontMatter:{id:"package-validation",hide_title:!0},sidebar:"docs",previous:{title:"@polywrap/os-js",permalink:"/reference/clients/js/libraries/os-js"},next:{title:"@polywrap/polywrap-manifest-types-js",permalink:"/reference/clients/js/libraries/polywrap-manifest-types-js"}},c={},s=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2}],p={toc:s},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"polywrappackage-validation"},"@polywrap/package-validation"),(0,n.kt)("h2",{id:"description"},"Description"),(0,n.kt)("p",null,"Utilities for the validation of WRAP packages. Allows to implement custom constraints to\ncheck if a WRAP package is valid"),(0,n.kt)("p",null,"The main two entities here are ",(0,n.kt)("inlineCode",{parentName:"p"},"WasmPackageValidator")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"FileSystemPackageReader")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { WasmPackageValidator, FileSystemPackageReader } from "@polywrap/package-validation"\n\n// Size unit is KB\nconst validator = new WasmPackageValidator({\n    maxSize: 1_000_000,\n    maxFileSize: 1_000_000,\n    maxModuleSize: 1_000_000,\n    maxNumberOfFiles: 10,\n});\n\nconst reader = new FileSystemPackageReader("absolute/path/to/package/folder")\nconst result = await validator.validate(result)\n')))}u.isMDXComponent=!0}}]);