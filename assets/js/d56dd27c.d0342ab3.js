"use strict";(self.webpackChunk_polywrap_docs=self.webpackChunk_polywrap_docs||[]).push([[1299],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),c=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(i.Provider,{value:r},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=c(t),d=a,f=l["".concat(i,".").concat(d)]||l[d]||m[d]||o;return t?n.createElement(f,s(s({ref:r},u),{},{components:t})):n.createElement(f,s({ref:r},u))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p[l]="string"==typeof e?e:a,s[1]=p;for(var c=2;c<o;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9405:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={id:"router",title:"Router"},s=void 0,p={unversionedId:"demos/uniswapv3/queries/router",id:"demos/uniswapv3/queries/router",title:"Router",description:"swapCallParameters",source:"@site/docs/demos/uniswapv3/queries/router.md",sourceDirName:"demos/uniswapv3/queries",slug:"/demos/uniswapv3/queries/router",permalink:"/demos/uniswapv3/queries/router",draft:!1,editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/demos/uniswapv3/queries/router.md",tags:[],version:"current",frontMatter:{id:"router",title:"Router"}},i={},c=[{value:"swapCallParameters",id:"swapcallparameters",level:3}],u={toc:c},l="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(l,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"swapcallparameters"},"swapCallParameters"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Encodes arguments and returns transaction calldata to make a swap on an Uniswap's V3 Router contract")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"swapCallParameters(\n  trades: Trade[]! # Trades for which to produce call parameters\n  options: SwapOptions! # Configuration options for the swap call\n): MethodParameters!\n")))}m.isMDXComponent=!0}}]);