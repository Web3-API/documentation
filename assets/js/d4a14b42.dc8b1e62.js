"use strict";(self.webpackChunk_polywrap_docs=self.webpackChunk_polywrap_docs||[]).push([[3667],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>m});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),p=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},s=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(r),f=o,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||c;return r?t.createElement(m,a(a({ref:n},s),{},{components:r})):t.createElement(m,a({ref:n},s))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=f;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var p=2;p<c;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4565:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>p});var t=r(7462),o=(r(7294),r(3905));const c={id:"docgen",title:"Docgen"},a=void 0,i={unversionedId:"reference/cli/commands/docgen",id:"reference/cli/commands/docgen",title:"Docgen",description:"",source:"@site/docs/reference/cli/commands/docgen.md",sourceDirName:"reference/cli/commands",slug:"/reference/cli/commands/docgen",permalink:"/reference/cli/commands/docgen",draft:!1,editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/reference/cli/commands/docgen.md",tags:[],version:"current",frontMatter:{id:"docgen",title:"Docgen"},sidebar:"docs",previous:{title:"Manifest",permalink:"/reference/cli/commands/manifest"},next:{title:"Infra",permalink:"/reference/cli/commands/infra"}},l={},p=[],s={toc:p},u="wrapper";function d(e){let{components:n,...r}=e;return(0,o.kt)(u,(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Usage: polywrap docgen|o <action> [options]\n\nGenerate wrapper documentation\n\nArguments:\n  action                             \n    schema      Generate GraphQL schema\n    docusaurus    Generate Docusaurus markdown\n    jsdoc         Generate JSDoc markdown\n   (choices: "schema", "docusaurus", "jsdoc")\n\nOptions:\n  -m, --manifest-file <path>         Path to the project manifest file\n                                     (default: polywrap.yaml | polywrap.yml)\n  -g, --docgen-dir <path>            Output directory for generated docs\n                                     (default: ./docs)\n  -c, --client-config <config-path>  Add custom configuration to the\n                                     PolywrapClient\n  -i, --imports                      Also generate docs for dependencies\n  -v, --verbose                      Verbose output (default: false)\n  -q, --quiet                        Suppress output (default: false)\n  -h, --help                         display help for command\n')))}d.isMDXComponent=!0}}]);