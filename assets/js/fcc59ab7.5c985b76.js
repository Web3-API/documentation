(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{189:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return o})),n.d(r,"metadata",(function(){return c})),n.d(r,"toc",(function(){return s})),n.d(r,"default",(function(){return p}));var t=n(3),a=(n(0),n(195));const o={id:"schema-parse",hide_title:!0},c={unversionedId:"reference/schema/schema-parse",id:"reference/schema/schema-parse",isDocsHomePage:!1,title:"schema-parse",description:"@polywrap/schema-parse",source:"@site/docs/reference/schema/schema-parse.md",slug:"/reference/schema/schema-parse",permalink:"/reference/schema/schema-parse",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/reference/schema/schema-parse.md",version:"current",sidebar:"docs",previous:{title:"wrap-manifest-types-js",permalink:"/reference/clients/js/libraries/wrap-manifest-types-js"},next:{title:"schema-compose",permalink:"/reference/schema/schema-compose"}},s=[{value:"Usage",id:"usage",children:[{value:"Options",id:"options",children:[]},{value:"ABI Transforms",id:"abi-transforms",children:[]}]}],i={toc:s};function p(e){let{components:r,...n}=e;return Object(a.b)("wrapper",Object(t.a)({},i,n,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"polywrapschema-parse"},"@polywrap/schema-parse"),Object(a.b)("p",null,"Parse & validate WRAP schemas, converting them into a WRAP ABI structure. Optionally perform transformations upon the WRAP ABI."),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},'import {\n  Abi,\n  parseSchema,\n  ParserOptions\n} from "@polywrap/schema-parse";\n\nconst schema = readFileSync("module.graphql", "utf-8");\nconst options: ParserOptions = { };\n\nconst abi: Abi = parseSchema(schema, options);\n')),Object(a.b)("h3",{id:"options"},"Options"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"interface ParserOptions {\n  // Disable schema validation\n  noValidate?: boolean;\n  // Use custom validators\n  validators?: SchemaValidatorBuilder[];\n  // Use custom extractors\n  extractors?: SchemaExtractorBuilder[];\n  // Use custom transformations\n  transforms?: AbiTransforms[];\n}\n")),Object(a.b)("h3",{id:"abi-transforms"},"ABI Transforms"),Object(a.b)("p",null,"ABI transformations can be used to modify the ABI structure. A variety of pre-defined transformations can be found in the ",Object(a.b)("a",{parentName:"p",href:"https://github.com/polywrap/toolchain/tree/origin/packages/schema/parse/src/transform/"},"https://github.com/polywrap/toolchain/tree/origin/packages/schema/parse/src/transform/")," directory."),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},'import {\n  Abi,\n  AbiTransforms,\n  GenericDefinition,\n  parseSchema\n} from "@polywrap/schema-parse";\n\nfunction extendType(extension: any): AbiTransforms {\n  return {\n    enter: {\n      Abi: (abi: Abi) => ({\n        ...abi,\n        extension,\n      }),\n      GenericDefinition: (def: GenericDefinition) => ({\n        ...def,\n        ...extension,\n      }),\n    },\n  };\n}\n')),Object(a.b)("p",null,"Usage:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},'parseSchema(schema, {\n  transforms: [\n    extendType({ newProp: "foo" })\n  ]\n});\n')))}p.isMDXComponent=!0},195:function(e,r,n){"use strict";n.d(r,"a",(function(){return l})),n.d(r,"b",(function(){return b}));var t=n(0),a=n.n(t);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function c(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?c(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),m=function(e){var r=a.a.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},l=function(e){var r=m(e.components);return a.a.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},f=a.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=m(n),f=t,b=l["".concat(c,".").concat(f)]||l[f]||u[f]||o;return n?a.a.createElement(b,s(s({ref:r},p),{},{components:n})):a.a.createElement(b,s({ref:r},p))}));function b(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,c=new Array(o);c[0]=f;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s.mdxType="string"==typeof e?e:t,c[1]=s;for(var p=2;p<o;p++)c[p]=n[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);