(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{147:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return l}));var a=n(3),r=n(8),o=(n(0),n(163)),i=["components"],c={id:"trade",title:"Trade"},p={unversionedId:"demos/uniswapv2/queries/trade",id:"demos/uniswapv2/queries/trade",isDocsHomePage:!1,title:"Trade",description:"Imported types",source:"@site/docs/demos/uniswapv2/queries/trade.md",slug:"/demos/uniswapv2/queries/trade",permalink:"/demos/uniswapv2/queries/trade",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/demos/uniswapv2/queries/trade.md",version:"current"},u=[{value:"Imported types",id:"imported-types",children:[{value:"Trade",id:"trade",children:[]},{value:"TradeOptions",id:"tradeoptions",children:[]},{value:"TradeType",id:"tradetype",children:[]}]},{value:"Query schemas",id:"query-schemas",children:[{value:"tokenEquals",id:"tokenequals",children:[]},{value:"createTrade",id:"createtrade",children:[]},{value:"tradeExecutionPrice",id:"tradeexecutionprice",children:[]},{value:"tradeNextMidPrice",id:"tradenextmidprice",children:[]},{value:"tradeSlippage",id:"tradeslippage",children:[]},{value:"tradeMinimumAmountOut",id:"trademinimumamountout",children:[]},{value:"tradeMaximumAmountIn",id:"trademaximumamountin",children:[]},{value:"bestTradeExactIn",id:"besttradeexactin",children:[]},{value:"bestTradeExactOut",id:"besttradeexactout",children:[]}]}],d={toc:u};function l(e){var t=e.components,n=Object(r.a)(e,i);return Object(o.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"imported-types"},"Imported types"),Object(o.b)("h3",{id:"trade"},Object(o.b)("a",{parentName:"h3",href:"../common-types#trade"},"Trade")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type Trade {\n  route: Route!\n  inputAmount: TokenAmount!\n  outputAmount: TokenAmount!\n  tradeType: TradeType!\n}\n")),Object(o.b)("h3",{id:"tradeoptions"},Object(o.b)("a",{parentName:"h3",href:"../common-types#tradeoptions"},"TradeOptions")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type TradeOptions {\n  allowedSlippage: String!\n  recipient: String!\n  unixTimestamp: UInt64!\n  ttl: UInt32\n  deadline: UInt32\n  feeOnTransfer: Boolean\n}\n")),Object(o.b)("h3",{id:"tradetype"},Object(o.b)("a",{parentName:"h3",href:"../common-types#tradetype"},"TradeType")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"enum TradeType {\n  EXACT_INPUT\n  EXACT_OUTPUT\n}\n")),Object(o.b)("h2",{id:"query-schemas"},"Query schemas"),Object(o.b)("h3",{id:"tokenequals"},"tokenEquals"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Checks if the current instance is equal to another (has an identical chainId and address).")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"tokenEquals(token: Token!, other: Token!): Boolean!\n")),Object(o.b)("h3",{id:"createtrade"},"createTrade"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Creates a new trade.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"  createTrade(\n    route: Route!\n    amount: TokenAmount!\n    tradeType: TradeType!\n  ): Trade!\n")),Object(o.b)("h3",{id:"tradeexecutionprice"},"tradeExecutionPrice"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Calculates the average price that the trade would execute at.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"  tradeExecutionPrice(\n    trade: Trade!\n  ): String!\n")),Object(o.b)("h3",{id:"tradenextmidprice"},"tradeNextMidPrice"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"What the new mid price would be if the trade were to execute.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"  tradeNextMidPrice(\n    trade: Trade!\n  ): String!\n")),Object(o.b)("h3",{id:"tradeslippage"},"tradeSlippage"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"The slippage incurred by the trade. (strictly > 0.30%) result is a percent like 100.0%")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"  tradeSlippage(\n    trade: Trade!\n  ): String!\n")),Object(o.b)("h3",{id:"trademinimumamountout"},"tradeMinimumAmountOut"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Trades the minimum amount out.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"  tradeMinimumAmountOut(\n    trade: Trade!\n    slippageTolerance: String! # Float32!\n  ): TokenAmount!\n")),Object(o.b)("h3",{id:"trademaximumamountin"},"tradeMaximumAmountIn"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Trades the maximum amount in.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"  tradeMaximumAmountIn(\n    trade: Trade!\n    slippageTolerance: String! # Float32!\n  ): TokenAmount!\n")),Object(o.b)("h3",{id:"besttradeexactin"},"bestTradeExactIn"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Given a list of pairs, a fixed amount in, and token out, this method"),"\n",Object(o.b)("em",{parentName:"p"},"returns the best maxNumResults trades that swap an input token amount to an"),"\n",Object(o.b)("em",{parentName:"p"},"output token, making at most maxHops hops. The returned trades are sorted by"),"\n",Object(o.b)("em",{parentName:"p"},"output amount, in decreasing order, and all share the given input amount.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"  bestTradeExactIn(\n    pairs: [Pair!]!\n    amountIn: TokenAmount!\n    tokenOut: Token!\n    options: BestTradeOptions\n  ): [Trade!]!\n")),Object(o.b)("h3",{id:"besttradeexactout"},"bestTradeExactOut"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Similar to the above method, but targets a fixed output token amount. The"),"\n",Object(o.b)("em",{parentName:"p"},"returned trades are sorted by input amount, in increasing order, and all share"),"\n",Object(o.b)("em",{parentName:"p"},"the given output amount.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"  bestTradeExactOut(\n    pairs: [Pair!]!\n    tokenIn: Token!\n    amountOut: TokenAmount!\n    options: BestTradeOptions\n  ): [Trade!]!\n")))}l.isMDXComponent=!0},163:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return s}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),d=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=d(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=d(n),b=a,s=l["".concat(i,".").concat(b)]||l[b]||m[b]||o;return n?r.a.createElement(s,c(c({ref:t},u),{},{components:n})):r.a.createElement(s,c({ref:t},u))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);