(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{194:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},l=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=p(n),d=r,f=l["".concat(a,".").concat(d)]||l[d]||m[d]||i;return n?o.a.createElement(f,u(u({ref:t},s),{},{components:n})):o.a.createElement(f,u({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:r,a[1]=u;for(var s=2;s<i;s++)a[s]=n[s];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return s}));var r=n(3),o=(n(0),n(194));const i={id:"positionUtils",title:"Position Utilities"},a={unversionedId:"demos/uniswapv3/queries/positionUtils",id:"demos/uniswapv3/queries/positionUtils",isDocsHomePage:!1,title:"Position Utilities",description:"maxLiquidityForAmounts",source:"@site/docs/demos/uniswapv3/queries/positionUtils.md",slug:"/demos/uniswapv3/queries/positionUtils",permalink:"/demos/uniswapv3/queries/positionUtils",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/demos/uniswapv3/queries/positionUtils.md",version:"current"},u=[{value:"maxLiquidityForAmounts",id:"maxliquidityforamounts",children:[]}],c={toc:u};function s(e){let{components:t,...n}=e;return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"maxliquidityforamounts"},"maxLiquidityForAmounts"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Computes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"maxLiquidityForAmounts(\n  sqrtRatioCurrentX96: BigInt! # Encoded representation of the current price\n  sqrtRatioAX96: BigInt! # Encoded representation of the price at lower tick boundary\n  sqrtRatioBX96: BigInt! # Encoded representation of the price at upper tick boundary\n  amount0: BigInt! # Amount for the first token of the pool\n  amount1: BigInt! # Amount for the second token of the pool\n  useFullPrecision: Boolean! # If false, liquidity will be maximized according to what the router can calculate, not what core can theoretically support\n): BigInt!\n")))}s.isMDXComponent=!0}}]);