(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{194:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),f=r,d=u["".concat(c,".").concat(f)]||u[f]||m[f]||i;return n?a.a.createElement(d,o(o({ref:t},s),{},{components:n})):a.a.createElement(d,o({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var s=2;s<i;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},196:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},197:function(e,t,n){"use strict";var r=n(0),a=n(198);t.a=function(){const e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},198:function(e,t,n){"use strict";var r=n(0);const a=Object(r.createContext)(void 0);t.a=a},199:function(e,t,n){"use strict";var r=n(0),a=n.n(r),i=n(197),c=n(196),o=n(57),l=n.n(o);const s=37,p=39;t.a=function(e){const{lazy:t,block:n,defaultValue:o,values:u,groupId:m,className:f}=e,{tabGroupChoices:d,setTabGroupChoices:b}=Object(i.a)(),[h,y]=Object(r.useState)(o),g=r.Children.toArray(e.children),v=[];if(null!=m){const e=d[m];null!=e&&e!==h&&u.some(t=>t.value===e)&&y(e)}const O=e=>{const t=e.target,n=v.indexOf(t),r=g[n].props.value;y(r),null!=m&&(b(m,r),setTimeout(()=>{(function(e){const{top:t,left:n,bottom:r,right:a}=e.getBoundingClientRect(),{innerHeight:i,innerWidth:c}=window;return t>=0&&a<=c&&r<=i&&n>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l.a.tabItemActive),setTimeout(()=>t.classList.remove(l.a.tabItemActive),2e3))},150))},j=e=>{var t;let n;switch(e.keyCode){case p:{const t=v.indexOf(e.target)+1;n=v[t]||v[0];break}case s:{const t=v.indexOf(e.target)-1;n=v[t]||v[v.length-1];break}}null===(t=n)||void 0===t||t.focus()};return a.a.createElement("div",{className:"tabs-container"},a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},f)},u.map(e=>{let{value:t,label:n}=e;return a.a.createElement("li",{role:"tab",tabIndex:h===t?0:-1,"aria-selected":h===t,className:Object(c.a)("tabs__item",l.a.tabItem,{"tabs__item--active":h===t}),key:t,ref:e=>v.push(e),onKeyDown:j,onFocus:O,onClick:O},n)})),t?Object(r.cloneElement)(g.filter(e=>e.props.value===h)[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},g.map((e,t)=>Object(r.cloneElement)(e,{key:t,hidden:e.props.value!==h}))))}},200:function(e,t,n){"use strict";var r=n(0),a=n.n(r);t.a=function(e){let{children:t,hidden:n,className:r}=e;return a.a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},97:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),a=(n(0),n(194)),i=n(199),c=n(200);const o={id:"define-implement-interfaces",title:"Define and implement interfaces"},l={unversionedId:"tutorials/interfaces/define-implement-interfaces",id:"tutorials/interfaces/define-implement-interfaces",isDocsHomePage:!1,title:"Define and implement interfaces",description:"A special type of Polywrap project can be used to define an abstract interface without providing a concrete implementation.",source:"@site/docs/tutorials/interfaces/define-implement-interfaces.md",slug:"/tutorials/interfaces/define-implement-interfaces",permalink:"/tutorials/interfaces/define-implement-interfaces",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/tutorials/interfaces/define-implement-interfaces.md",version:"current",sidebar:"docs",previous:{title:"Configure interfaces in the client",permalink:"/tutorials/interfaces/client-config-interfaces"},next:{title:"Interface instances",permalink:"/tutorials/interfaces/interface-instances"}},s=[{value:"Declaring an interface project",id:"declaring-an-interface-project",children:[]},{value:"Defining an interface",id:"defining-an-interface",children:[]},{value:"Implementing an interface",id:"implementing-an-interface",children:[]}],p={toc:s};function u(e){let{components:t,...n}=e;return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A special type of Polywrap project can be used to define an abstract interface without providing a concrete implementation.\nLike other wrappers, the interface is defined using a ",Object(a.b)("a",{parentName:"p",href:"../wrapper-schema"},"Wrapper Schema"),".\nOnce an interface is written and deployed, other projects can import and implement it."),Object(a.b)("p",null,"For example, the ",Object(a.b)("a",{parentName:"p",href:"https://github.com/polywrap/monorepo/tree/origin/packages/interfaces/uri-resolver"},"URI Resolver"),"\ninterface is used to standardize the interface of URI resolvers.\nIt is implemented by multiple plugin wrappers to help the Polywrap client query different types of URIs."),Object(a.b)("h2",{id:"declaring-an-interface-project"},"Declaring an interface project"),Object(a.b)("p",null,"Interface projects are declared using a ",Object(a.b)("a",{parentName:"p",href:"../create-wasm-wrappers/polywrap-manifest"},"Polywrap Manifest"),".\nTo indicate that a project is an abstract interface, set the project language to ",Object(a.b)("inlineCode",{parentName:"p"},"interface"),"."),Object(a.b)("p",null,"Interface projects do not have a module. Only a ",Object(a.b)("a",{parentName:"p",href:"../wrapper-schema"},"schema")," path is declared."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},"format: 0.1.0\nname: UriResolver\ndeploy: ./polywrap.deploy.yaml\nlanguage: interface\nschema: ./src/schema.graphql\n")),Object(a.b)("h2",{id:"defining-an-interface"},"Defining an interface"),Object(a.b)("p",null,"Defining an interface is as simple as writing the ",Object(a.b)("a",{parentName:"p",href:"../wrapper-schema"},"Wrapper Schema"),".\nOnce the schema is complete, you are ready to deploy the interface wrapper."),Object(a.b)("h2",{id:"implementing-an-interface"},"Implementing an interface"),Object(a.b)("p",null,"As described in ",Object(a.b)("a",{parentName:"p",href:"../wrapper-schema#interfaces"},"Wrapper Schema"),",\nan interface can be imported and then implemented with the ",Object(a.b)("inlineCode",{parentName:"p"},"implements")," keyword.\nWhen a module ",Object(a.b)("inlineCode",{parentName:"p"},"implements")," an interface module, it inherits all of its method declarations."),Object(a.b)("p",null,"The ",Object(a.b)("a",{parentName:"p",href:"https://github.com/polywrap/monorepo/tree/origin/packages/js/plugins/uri-resolvers/ens-resolver"},"ENS Resolver")," plugin\nimplements the ",Object(a.b)("a",{parentName:"p",href:"https://github.com/polywrap/monorepo/tree/origin/packages/interfaces/uri-resolver"},"URI Resolver")," interface\nand inherits its methods."),Object(a.b)(i.a,{defaultValue:"ens",values:[{label:"ENS Resolver Schema",value:"ens"},{label:"URI Resolver Schema",value:"uri"}],mdxType:"Tabs"},Object(a.b)(c.a,{value:"ens",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'#import { Module, MaybeUriOrManifest } into UriResolver from "ens/uri-resolver.core.polywrap.eth"\n#import { Module } into Ethereum from "ens/ethereum.polywrap.eth"\n\ntype Module implements UriResolver_Module {}\n'))),Object(a.b)(c.a,{value:"uri",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},"type Module {\n  tryResolveUri(\n    authority: String!\n    path: String!\n  ): MaybeUriOrManifest\n\n  getFile(\n    path: String!\n  ): Bytes\n}\n\ntype MaybeUriOrManifest {\n  uri: String\n  manifest: Bytes\n}\n")))))}u.isMDXComponent=!0}}]);