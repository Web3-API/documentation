"use strict";(self.webpackChunk_polywrap_docs=self.webpackChunk_polywrap_docs||[]).push([[4290],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},c=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),y=o,m=u["".concat(l,".").concat(y)]||u[y]||d[y]||a;return t?n.createElement(m,p(p({ref:r},c),{},{components:t})):n.createElement(m,p({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,p=new Array(a);p[0]=y;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[u]="string"==typeof e?e:o,p[1]=i;for(var s=2;s<a;s++)p[s]=t[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},860:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=t(7462),o=(t(7294),t(3905));const a={id:"react-integration",title:"React integration"},p=void 0,i={unversionedId:"tutorials/integrate-wrappers/react-integration",id:"tutorials/integrate-wrappers/react-integration",title:"React integration",description:"To use the Polywrap React integration, you'll need to install the @polywrap/react package.",source:"@site/docs/tutorials/integrate-wrappers/react-integration.md",sourceDirName:"tutorials/integrate-wrappers",slug:"/tutorials/integrate-wrappers/react-integration",permalink:"/tutorials/integrate-wrappers/react-integration",draft:!1,editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/tutorials/integrate-wrappers/react-integration.md",tags:[],version:"current",frontMatter:{id:"react-integration",title:"React integration"},sidebar:"docs",previous:{title:"Generate types for your app",permalink:"/tutorials/integrate-wrappers/types-for-app"},next:{title:"Project setup",permalink:"/tutorials/create-wasm-wrappers/tutorial/project-setup"}},l={},s=[{value:"<strong>PolywrapProvider</strong>",id:"polywrapprovider",level:3},{value:"<strong>PolywrapProvider Props</strong>",id:"polywrapprovider-props",level:4},{value:"<strong>Multiple PolywrapProviders</strong>",id:"multiple-polywrapproviders",level:4},{value:"<strong>usePolywrapClient</strong>",id:"usepolywrapclient",level:3},{value:"<strong>usePolywrapInvoke</strong>",id:"usepolywrapinvoke",level:3}],c={toc:s},u="wrapper";function d(e){let{components:r,...t}=e;return(0,o.kt)(u,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To use the Polywrap React integration, you'll need to install the ",(0,o.kt)("inlineCode",{parentName:"p"},"@polywrap/react")," package."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @polywrap/react\n")),(0,o.kt)("p",null,"An example React application can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/polywrap/demos/tree/main/hello-world/app/react.js"},"here"),"."),(0,o.kt)("h3",{id:"polywrapprovider"},(0,o.kt)("strong",{parentName:"h3"},"PolywrapProvider")),(0,o.kt)("p",null,"Once installed, the first step is to add the ",(0,o.kt)("inlineCode",{parentName:"p"},"PolywrapProvider")," to your DOM. This will instantiate an instance of the ",(0,o.kt)("inlineCode",{parentName:"p"},"PolywrapClient")," for all queries within the nested DOM hierarchy to use."),(0,o.kt)("p",null,"To use the provider, simply wrap it around whatever DOM hierarchy you'd like to use Polywrap within:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { PolywrapProvider } from '@polywrap/react';\n\nexport const App: React.FC = () => {\n  return (\n    <PolywrapProvider>\n        <HelloWorld />\n    </PolywrapProvider>\n  );\n};\n")),(0,o.kt)("h4",{id:"polywrapprovider-props"},(0,o.kt)("strong",{parentName:"h4"},"PolywrapProvider Props")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"PolywrapProvider")," component's props are the same as the ",(0,o.kt)("inlineCode",{parentName:"p"},"PolywrapClient")," constructor's arguments. For example, you can configure URI redirects like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"<PolywrapProvider redirects={ [] }/>\n")),(0,o.kt)("h4",{id:"multiple-polywrapproviders"},(0,o.kt)("strong",{parentName:"h4"},"Multiple PolywrapProviders")),(0,o.kt)("p",null,"If you need to use multiple providers, you can do so using the ",(0,o.kt)("inlineCode",{parentName:"p"},'createPolywrapProvider("...")')," method, which accepts the name of your provider as an argument. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { createPolywrapProvider } from '@polywrap/react';\n\nconst CustomPolywrapProvider = createPolywrapProvider('custom');\n\nexport const CustomProvider = ({ children }: { children: JSX.Element }) => {\n  return (\n    <CustomPolywrapProvider>\n      {children}\n    </CustomPolywrapProvider>\n  );\n};\n")),(0,o.kt)("h3",{id:"usepolywrapclient"},(0,o.kt)("strong",{parentName:"h3"},"usePolywrapClient")),(0,o.kt)("p",null,"You can obtain a copy of the client instance from your ",(0,o.kt)("inlineCode",{parentName:"p"},"PolywrapProvider")," using the ",(0,o.kt)("inlineCode",{parentName:"p"},"usePolywrapClient")," hook."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const client = usePolywrapClient();\n")),(0,o.kt)("h3",{id:"usepolywrapinvoke"},(0,o.kt)("strong",{parentName:"h3"},"usePolywrapInvoke")),(0,o.kt)("p",null,"After enabling your React application with the PolywrapProvider, you may now use the ",(0,o.kt)("inlineCode",{parentName:"p"},"usePolywrapInvoke")," hook to call into wrappers!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'const { execute, data, error, loading } = usePolywrapInvoke({\n  uri: \'ens/wraps.eth:logging@1.0.0\',\n  method: "info",\n  args: {\n    message: "Hello World!",\n  },\n});\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"By default, the ",(0,o.kt)("inlineCode",{parentName:"p"},"usePolywrapInvoke")," hook uses the first PolywrapProvider found in the DOM's hierarchy. If you'd like to specify a specific provider to be used, simply set the ",(0,o.kt)("inlineCode",{parentName:"p"},"provider:")," property:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'const { execute, data, error, loading } = usePolywrapInvoke({\n  provider: "custom",\n  uri: \'ens/wraps.eth:logging@1.0.0\',\n  method: "info",\n  args: {\n    message: "Hello World!",\n  },\n});\n'))))}d.isMDXComponent=!0}}]);