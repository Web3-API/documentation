(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{106:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(8),o=(n(0),n(166)),i=["components"],l={id:"build-deploy-test",title:"Build, deploy and test"},p={unversionedId:"quick-start/create-wasm-wrappers/tutorial/build-deploy-test",id:"quick-start/create-wasm-wrappers/tutorial/build-deploy-test",isDocsHomePage:!1,title:"Build, deploy and test",description:"Build",source:"@site/docs/quick-start/create-wasm-wrappers/tutorial/build-deploy-test.md",slug:"/quick-start/create-wasm-wrappers/tutorial/build-deploy-test",permalink:"/quick-start/create-wasm-wrappers/tutorial/build-deploy-test",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/quick-start/create-wasm-wrappers/tutorial/build-deploy-test.md",version:"current",sidebar:"docs",previous:{title:"The Polywrap project folder",permalink:"/quick-start/create-wasm-wrappers/tutorial/project-folder"},next:{title:"Adding new Methods",permalink:"/quick-start/create-wasm-wrappers/tutorial/adding-new-methods"}},c=[{value:"<strong>Build</strong>",id:"build",children:[]},{value:"<strong>Deploy</strong>",id:"deploy",children:[]},{value:"<strong>Test</strong>",id:"test",children:[]}],s={toc:c};function u(e){var t=e.components,n=Object(a.a)(e,i);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"build"},Object(o.b)("strong",{parentName:"h3"},"Build")),Object(o.b)("p",null,"Let's start building our project! Simply run:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"yarn build\n")),Object(o.b)("p",null,"In the output window, you'll see that our smart contract was compiled, and our Polywrap wrapper was built and output to the ",Object(o.b)("inlineCode",{parentName:"p"},"./build/*")," folder. It contains the following files:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"build/\n    |\u2500\u2500 wrap.wasm          # Wrapper Logic\n    \u2514\u2500\u2500 wrap.info          # Wrapper Manifest\n")),Object(o.b)("p",null,"This directory's contents will be uploaded to decentralized storage, and enable any Polywrap Client to download, and execute your wrapper's functionality within the application."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"wrap.wasm")," file is the WebAssembly file that was compiled from AssemblyScript."),Object(o.b)("p",null,"Lastly, the ",Object(o.b)("inlineCode",{parentName:"p"},"wrap.info")," file describes the layout of the package, as well as its methods and custom types."),Object(o.b)("h3",{id:"deploy"},Object(o.b)("strong",{parentName:"h3"},"Deploy")),Object(o.b)("p",null,"To deploy our Polywrap wrapper and associated smart contracts for testing, let's first setup a test environment. Simply run:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"yarn test:env:up\n")),Object(o.b)("p",null,"This will stand-up an Ethereum node, as well as an IPFS node."),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"In the future, test environments will be easily configurable to include any nodes your Polywrap wrapper requires."))),Object(o.b)("p",null,"Next, let's deploy the ",Object(o.b)("inlineCode",{parentName:"p"},"SimpleStorage.sol")," smart contract, and the ",Object(o.b)("inlineCode",{parentName:"p"},"simplestorage.eth")," wrapper URI by running:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"yarn deploy\n")),Object(o.b)("h3",{id:"test"},Object(o.b)("strong",{parentName:"h3"},"Test")),Object(o.b)("p",null,"With our Polywrap wrapper live at ",Object(o.b)("inlineCode",{parentName:"p"},"simplestorage.eth")," on our test network, it's now time to test it out!"),Object(o.b)("p",null,"This is where our workflows come in handy. Run ",Object(o.b)("inlineCode",{parentName:"p"},"yarn test")," to see this in action."),Object(o.b)("p",null,"In the output window, you'll see a combination of jobs and returned results from the Polywrap wrapper. In this workflow, we send a combination of ",Object(o.b)("inlineCode",{parentName:"p"},"setData")," and ",Object(o.b)("inlineCode",{parentName:"p"},"getData")," queries which modify the ",Object(o.b)("inlineCode",{parentName:"p"},"SimpleStorage.sol")," contract's stored value."),Object(o.b)("p",null,"Now that we've built the SimpleStorage Wasm wrapper, let's add custom functionality to it in the next section!"))}u.isMDXComponent=!0},166:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),s=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),b=r,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return n?a.a.createElement(m,l(l({ref:t},c),{},{components:n})):a.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);