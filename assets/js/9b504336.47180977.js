(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{142:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return c}));var r=n(3),a=(n(0),n(194));const i={id:"test-env-js",hide_title:!0},o={unversionedId:"reference/clients/js/libraries/test-env-js",id:"reference/clients/js/libraries/test-env-js",isDocsHomePage:!1,title:"test-env-js",description:"@polywrap/test-env-js",source:"@site/docs/reference/clients/js/libraries/test-env-js.md",slug:"/reference/clients/js/libraries/test-env-js",permalink:"/reference/clients/js/libraries/test-env-js",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/reference/clients/js/libraries/test-env-js.md",version:"current",sidebar:"docs",previous:{title:"result",permalink:"/reference/clients/js/libraries/result"},next:{title:"tracing-js",permalink:"/reference/clients/js/libraries/tracing-js"}},s=[],p={toc:s};function c(e){let{components:t,...n}=e;return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"polywraptest-env-js"},"@polywrap/test-env-js"),Object(a.b)("p",null,"Provides functions to setup a test environment with Polywrap CLI and Docker."),Object(a.b)("h1",{id:"description"},"Description"),Object(a.b)("p",null,"It allows user to initiate the test environment through a javascript function (it's the ",Object(a.b)("inlineCode",{parentName:"p"},"infra")," command in the CLI). It also exports the providers and ens addresses expected in the deployments (They are hard coded, because the initiation of the environment is deterministic)"),Object(a.b)("h1",{id:"usage"},"Usage"),Object(a.b)("p",null,"Initialization with the simple-storage wrapper."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},'import path from "path";\nimport { PolywrapClient } from "@polywrap/client-js";\nimport {\n  buildWrapper,\n  initTestEnvironment,\n  stopTestEnvironment,\n  providers,\n  ensAddresses\n} from "@polywrap/test-env-js";\nimport * as App from "../types/wrap";\n\n// test wrapper in a test environment\nexport async function foo({\n  // spin up docker containers for Ganache and IPFS.\n  await initTestEnvironment();\n  const CONNECTION = { networkNameOrChainId: "testnet" };\n\n  // get path to the wrapper in testing\n  const wrapperPath: string = path.join(path.resolve(__dirname), "..");\n\n  // build current wrapper with CLI\n  await buildWrapper(wrapperPath);\n\n  // get URI to the local wrapper build\n  const wrapperUri = `fs/${wrapperPath}/build`;\n\n  // invoke the wrapper to deploy a contract to the test env\n  const deployContractResponse = await App.SimpleStorage_Module.deployContract(\n    { connection: CONNECTION },\n    client,\n    wrapperUri\n  );\n  const contractAddress = deployContractResponse.data as string;\n\n  // invoke the wrapper to query a contract in the test env\n  const response = await App.SimpleStorage_Module.getData(\n    {\n      address: contractAddr,\n      connection: CONNECTION,\n    },\n    client,\n    wrapperUri\n  );\n});\n\n')),Object(a.b)("h1",{id:"api"},"API"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"ensAddresses, providers - constant addresses and urls"),Object(a.b)("li",{parentName:"ul"},"runCLI - run arbitrary Polywrap CLI commands"),Object(a.b)("li",{parentName:"ul"},"initTestEnvironment - spin up Ganache and IPFS Docker instances "),Object(a.b)("li",{parentName:"ul"},"stopTestEnvironment - stop Docker"),Object(a.b)("li",{parentName:"ul"},"buildWrapper - compile wasm and bindings"),Object(a.b)("li",{parentName:"ul"},"buildAndDeployWrapper - deploy wrapper to the testnet ENS")))}c.isMDXComponent=!0},194:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),l=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),b=r,m=u["".concat(o,".").concat(b)]||u[b]||d[b]||i;return n?a.a.createElement(m,s(s({ref:t},c),{},{components:n})):a.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);