(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{180:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=u(n),f=r,m=s["".concat(a,".").concat(f)]||s[f]||d[f]||c;return n?o.a.createElement(m,i(i({ref:t},l),{},{components:n})):o.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,a=new Array(c);a[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var l=2;l<c;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var r=n(3),o=n(8),c=(n(0),n(180)),a=["components"],i={id:"codegen",title:"Codegen"},p={unversionedId:"reference/cli/commands/codegen",id:"reference/cli/commands/codegen",isDocsHomePage:!1,title:"Codegen",description:"`",source:"@site/docs/reference/cli/commands/codegen.md",slug:"/reference/cli/commands/codegen",permalink:"/reference/cli/commands/codegen",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/reference/cli/commands/codegen.md",version:"current",sidebar:"docs",previous:{title:"Create",permalink:"/reference/cli/commands/create"},next:{title:"Build",permalink:"/reference/cli/commands/build"}},l=[],u={toc:l};function s(e){var t=e.components,n=Object(o.a)(e,a);return Object(c.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"Usage: polywrap codegen|g [options]\n\nGenerate Code For Polywrap Projects\n\nOptions:\n  -m, --manifest-file <path>         Path to the Polywrap manifest file\n                                     (default: polywrap.yaml | polywrap.yml)\n  -g, --codegen-dir <path>            Output directory for the generated code\n                                     (default: ./src/wrap)\n  -p, --publish-dir <path>           Output path for the built schema and\n                                     manifest (default: ./build)\n  -s, --script <path>                Path to a custom generation script\n                                     (JavaScript | TypeScript)\n  -c, --client-config <config-path>  Add custom configuration to the\n                                     PolywrapClient\n  -v, --verbose                      Verbose output (default: false)\n  -q, --quiet                        Suppress output (default: false)\n  -h, --help                         display help for command\n")))}s.isMDXComponent=!0}}]);