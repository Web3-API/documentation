"use strict";(self.webpackChunk_polywrap_docs=self.webpackChunk_polywrap_docs||[]).push([[9603],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||r;return t?a.createElement(g,i(i({ref:n},p),{},{components:t})):a.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},680:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=t(7462),o=(t(7294),t(3905));const r={id:"encodeUtils",title:"Encode Utilities"},i=void 0,l={unversionedId:"demos/uniswapv3/queries/encodeUtils",id:"demos/uniswapv3/queries/encodeUtils",title:"Encode Utilities",description:"toHex",source:"@site/docs/demos/uniswapv3/queries/encodeUtils.md",sourceDirName:"demos/uniswapv3/queries",slug:"/demos/uniswapv3/queries/encodeUtils",permalink:"/demos/uniswapv3/queries/encodeUtils",draft:!1,editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/demos/uniswapv3/queries/encodeUtils.md",tags:[],version:"current",frontMatter:{id:"encodeUtils",title:"Encode Utilities"}},c={},s=[{value:"toHex",id:"tohex",level:3},{value:"encodeRouteToPath",id:"encoderoutetopath",level:3},{value:"encodePermit",id:"encodepermit",level:3},{value:"encodeUnwrapWETH9",id:"encodeunwrapweth9",level:3},{value:"encodeSweepToken",id:"encodesweeptoken",level:3},{value:"encodeRefundETH",id:"encoderefundeth",level:3},{value:"encodeMulticall",id:"encodemulticall",level:3}],p={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"tohex"},"toHex"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Converts a big int to a hex string")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"toHex(\n  value: BigInt! \n): String!\n")),(0,o.kt)("h3",{id:"encoderoutetopath"},"encodeRouteToPath"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Converts a route to a hex encoded path")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"encodeRouteToPath(\n  route: Route! # The v3 path to convert to an encoded path\n  exactOutput: Boolean! # Whether the route should be encoded in reverse, for making exact output swaps\n): String!\n")),(0,o.kt)("h3",{id:"encodepermit"},"encodePermit"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Encodes arguments and returns transaction calldata to call selfPermit or selfPermitAllowed on an instance of Uniswap's NonfungiblePositionManager contract: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"},"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"encodePermit(\n  token: Token! \n  options: PermitOptions! \n): String!\n")),(0,o.kt)("h3",{id:"encodeunwrapweth9"},"encodeUnwrapWETH9"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Encodes arguments and returns transaction calldata to call unwrapWETH9 or unwrapWETH9WithFee on an instance of Uniswap's NonfungiblePositionManager contract: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"},"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"encodeUnwrapWETH9(\n  amountMinimum: BigInt! \n  recipient: String! \n  feeOptions: FeeOptions \n): String!\n")),(0,o.kt)("h3",{id:"encodesweeptoken"},"encodeSweepToken"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Encodes arguments and returns transaction calldata to call sweepToken or sweepTokenWithFee on an instance of Uniswap's NonfungiblePositionManager contract: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"},"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"encodeSweepToken(\n  token: Token! \n  amountMinimum: BigInt! \n  recipient: String! \n  feeOptions: FeeOptions \n): String!\n")),(0,o.kt)("h3",{id:"encoderefundeth"},"encodeRefundETH"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Encodes arguments and returns transaction calldata to call refundEth on an instance of Uniswap's NonfungiblePositionManager contract: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"},"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"encodeRefundETH: String!\n")),(0,o.kt)("h3",{id:"encodemulticall"},"encodeMulticall"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Encodes multiple calldatas into a single calldata for making multiple calls in one transaction using a contract implementing the necessary interface, such as an instance of Uniswap's NonfungiblePositionManager contract: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"},"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"encodeMulticall(\n  calldatas: String[]! \n): String!\n")))}d.isMDXComponent=!0}}]);