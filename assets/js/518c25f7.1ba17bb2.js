(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{111:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return l}));var a=t(3),o=t(8),r=(t(0),t(180)),p=["components"],i={id:"swap",title:"Swap"},s={unversionedId:"demos/uniswapv3/mutations/swap",id:"demos/uniswapv3/mutations/swap",isDocsHomePage:!1,title:"Swap",description:"execSwap",source:"@site/docs/demos/uniswapv3/mutations/swap.md",slug:"/demos/uniswapv3/mutations/swap",permalink:"/demos/uniswapv3/mutations/swap",editUrl:"https://github.com/polywrap/documentation/tree/main/src/docs/demos/uniswapv3/mutations/swap.md",version:"current"},c=[{value:"execSwap",id:"execswap",children:[]},{value:"swap",id:"swap",children:[]},{value:"swapWithPool",id:"swapwithpool",children:[]}],u={toc:c};function l(e){var n=e.components,t=Object(o.a)(e,p);return Object(r.b)("wrapper",Object(a.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"execswap"},"execSwap"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Perform an on-chain swap with one or more trades in a single transaction")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"execSwap(\n  trades: Trade[]! # Trades to encode into calldata\n  swapOptions: SwapOptions! # Swap configuration\n  gasOptions: GasOptions # Transaction gas configuration\n): Ethereum_TxResponse!\n")),Object(r.b)("h3",{id:"swap"},"swap"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Perform an on-chain swap within a single pool by using token and fee amount information to find the correct pool")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"swap(\n  inToken: Token! # Input token of the pool\n  outToken: Token! # Output token of the pool\n  fee: FeeAmount! # Fee amount of the pool being used for the swap\n  amount: BigInt! # Amount being swapped in or out, depending on trade type\n  tradeType: TradeType! # Type of trade, either exact input or exact output\n  swapOptions: SwapOptions! # Swap configuration\n  gasOptions: GasOptions # Transaction gas configuration\n): Ethereum_TxResponse!\n")),Object(r.b)("h3",{id:"swapwithpool"},"swapWithPool"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Perform an on-chain swap using a single pool at provided address; requires ERC20-compliant input and output (i.e. no Ether)")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"swapWithPool(\n  address: String! # Ethereum address of the pool used for the swap\n  amount: TokenAmount! # Token amount being swapped in or out, depending on trade type\n  tradeType: TradeType! # Type of trade, either exact input or exact output\n  swapOptions: SwapOptions! # Swap configuration\n  gasOptions: GasOptions # Transaction gas configuration\n): Ethereum_TxResponse!\n")))}l.isMDXComponent=!0},180:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return f}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),u=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=u(t),m=a,f=l["".concat(p,".").concat(m)]||l[m]||d[m]||r;return t?o.a.createElement(f,i(i({ref:n},c),{},{components:t})):o.a.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,p=new Array(r);p[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var c=2;c<r;c++)p[c]=t[c];return o.a.createElement.apply(null,p)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);